CREATE TABLE Administrator(AdminID INTEGER, MenuID INTEGER, Fname VARCHAR(50), Lname VARCHAR(50), Username VARCHAR(50), Password VARCHAR(50), CONSTRAINT administrator_pk PRIMARY KEY(AdminID),  CONSTRAINT administrator_fk_menu FOREIGN KEY(MenuID) REFERENCES Menu);
CREATE TABLE Menu(MenuID INTEGER, FoodID INTEGER, Price INTEGER, StartDate DATE, EndDate DATE, CONSTRAINT menu_pk PRIMARY KEY(MenuID), CONSTRAINT menu_fk_fooditem FOREIGN KEY(FoodID) REFERENCES FoodItem);
CREATE TABLE FoodItem(FoodID INTEGER, Name VARCHAR(50), ItemCategory VARCHAR(50), Ingredients VARCHAR(500), UnitPrice INTEGER, CONSTRAINT fooditem_pk PRIMARY KEY(FoodID);
CREATE TABLE Order(OrderID INTEGER, CustomerID INTEGER, AmountDue INTEGER, OrderDate DATE, PickupDate DATE, CONSTRAINT order_pk PRIMARY KEY(OrderID), CONSTRAINT order_fk_customer FOREIGN KEY(CustomerID) REFERENCES Customer);
CREATE TABLE OrderItem(OrderID INTEGER, FoodID INTEGER, Quantity INTEGER, UnitPrice INTEGER, CONSTRAINT orderitem_pk PRIMARY KEY(OrderID), CONSTRAINT orderitem_fk_food FOREIGN KEY(FoodID) REFERENCES FoodItem);
CREATE TABLE Customer(CustomerID INTEGER, PaymentID INTEGER, Fname VARCHAR(50), Lname VARCHAR(50), Username VARCHAR(50), Password VARCHAR(50), Email VARCHAR(50), PhoneNumber VARCHAR(50), CONSTRAINT customer_pk PRIMARY KEY(CustomerID),  CONSTRAINT customer_fk_order FOREIGN KEY(OrderID) REFERENCES Order);
CREATE TABLE Payment(PaymentID INTEGER, OrderID INTEGER, CustomerID INTEGER, AmountDue INTEGER, PaymentDate DATE, CONSTRAINT payment_pk PRIMARY KEY(PaymentID), CONSTRAINT payment_fk_order FOREIGN KEY(OrderID), CONSTRAINT payment_fk_customer FOREIGN KEY(CustomerID));